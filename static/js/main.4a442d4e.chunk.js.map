{"version":3,"sources":["services/authenticate.js","pages/Homepage.js","components/AddWordForm.js","components/WordTable.js","components/DeleteWordForm.js","components/Header.js","images/book.png","pages/Landingpage.js","components/Footer.js","App.js","index.js","services/validateInput.js","components/Login/SignInForm.js","components/Login/RegisterForm.js","components/GetStartedModal.js"],"names":["async","verifyToken","token","encodedString","Buffer","from","toString","axios","request","method","url","process","headers","then","res","data","isValid","Homepage","words","setWords","useState","isLoggedIn","setIsLoggedIn","open","setOpen","getWords","localStorage","getItem","response","console","log","catch","error","useEffect","className","onClose","aria-labelledby","aria-describedby","AddWordForm","props","word","setWord","REACT_APP_API_KEY","onSubmit","e","post","target","reset","isAdded","err","preventDefault","type","onChange","value","useStyles","makeStyles","table","minWidth","WordTable","classes","root","component","Paper","aria-label","align","map","row","style","MuiTableCellRoot","definitions","def","i","definition","href","link","_id","DeleteWordForm","alert","Header","setDarkMode","darkMode","to","sx","color","onClick","removeItem","LandingPage","navigate","useNavigate","checkToken","Dialog","GetStartedModal","src","Book","alt","Footer","App","ReactDOM","render","path","element","document","getElementById","validateEmail","email","length","lastAtPos","lastIndexOf","lastDotPos","indexOf","validatePassword","password","theme","margin","spacing","width","marginTop","SignInForm","setEmail","setPassword","formError","setFormError","isAuthenticated","message","noValidate","autoComplete","apiURL","auth","username","isError","passwordError","emailError","passwordMessage","emailMessage","setItem","accessToken","TextField","id","label","fullWidth","helperText","required","Button","variant","RegisterForm","confirmPassword","setConfirmPassword","didCreate","createdUser","TabPanel","children","index","other","role","hidden","Box","p","a11yProps","setValue","AppBar","position","Tabs","event","newValue","centered","Tab"],"mappings":"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","file":"static/js/main.4a442d4e.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport async function verifyToken(token) {\n    const encodedString = Buffer.from(`Bearer ${token}`).toString('base64')\n    const apiURL = process.env.REACT_APP_API_URL ? process.env.REACT_APP_API_URL + '/login/verify' : 'http://localhost:5000/login/verify'\n\n    const val = await axios.request({\n        method: 'POST',\n        url: apiURL,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': encodedString\n        },\n    }).then(res => {\n        const isAuthenticated = res.data.isValid\n        if (isAuthenticated) {\n            return true\n        } else {\n            return false\n        }\n    })\n\n    return val\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport AddWordForm from '../components/AddWordForm'\nimport WordTable from '../components/WordTable'\nimport DeleteWordForm from '../components/DeleteWordForm'\nimport Header from '../components/Header'\nimport '../css/Homepage.css'\nimport GetStartedModal from '../components/GetStartedModal'\nimport { Dialog } from '@material-ui/core';\n\nfunction Homepage(){\n    const [words, setWords] = useState([])\n    const [isLoggedIn, setIsLoggedIn] = useState(true)\n    const [open, setOpen] = useState(false)\n\n    const checkToken = () => {\n        const token = localStorage.getItem('jwt')\n\n        if(token === null) {\n            return false;\n        } else {\n            return true\n        }\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    /** Axios call to get words from local database */\n    const getWords = () => {\n        const token = localStorage.getItem('jwt')\n        const encodedString = Buffer.from(`Bearer ${token}`).toString('base64')\n        const apiURL = process.env.REACT_APP_API_URL ? process.env.REACT_APP_API_URL + '/words' : 'http://localhost:5000/words'\n        axios.request({\n            method: 'GET',\n            url: apiURL,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': encodedString\n            },\n        }).then(function (response) {\n            if (!response.data.isValid) {\n                setIsLoggedIn(false)\n                setOpen(true)\n            } else {\n                setIsLoggedIn(true)\n                setWords(response.data.words)\n                console.log(response.data)\n            }\n        })\n        .catch(function (error) {\n            console.log(error)\n        })\n    } \n    \n    useEffect(() => {\n        if (checkToken()) {   \n            getWords()\n        } else {\n            setIsLoggedIn(false);\n            setOpen(true);\n        }\n    },[isLoggedIn])\n    \n    return(\n        <div>\n            {!isLoggedIn && \n            <Dialog\n                className='modal-container'\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                >\n            <GetStartedModal setIsLoggedIn={setIsLoggedIn}/>\n            </Dialog>\n            }\n            <Header setIsLoggedIn={setIsLoggedIn} />\n            <div className=\"formBox\">\n                    <AddWordForm getWords={getWords} />\n                    <DeleteWordForm getWords={getWords} />\n                    <WordTable words={words} />\n            </div>\n        </div>\n            \n    )\n}\nexport default Homepage","import React, {useState} from 'react'\nimport axios from 'axios'\nimport '../css/Form.css'\n\nfunction AddWordForm(props){\n    const [word, setWord] = useState(' ')\n\n    /** JSON passed into the API for the request */\n    let options = {\n        method: 'GET',\n        url: 'https://wordsapiv1.p.rapidapi.com/words/'+word,\n        headers: {\n          'x-rapidapi-key': process.env.REACT_APP_API_KEY,\n          'x-rapidapi-host': 'wordsapiv1.p.rapidapi.com'\n        }\n    }\n\n    const handleSubmit = (e) => {\n        const token = localStorage.getItem('jwt')\n        const encodedString = Buffer.from(`Bearer ${token}`).toString('base64')\n        const apiURL = process.env.REACT_APP_API_URL ? process.env.REACT_APP_API_URL + '/words/word' : 'http://localhost:5000/words/word'\n\n\n        axios.post(apiURL,{\n            word: word\n        },{headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': encodedString\n        }})\n        .then(res => {\n            e.target.reset()\n            if (res.data.isAdded){\n                props.getWords()\n            }\n            console.log(res)  \n        })\n        .catch(err => {\n            e.target.reset()\n            console.log(err)\n        }) \n\n        e.preventDefault()\n    }\n\n    /** Handles when user types into the form */\n    const handleInput = (e) => {\n        setWord(e.target.value)\n    }\n\n    return(\n        <div>\n            <form className=\"form-style\" onSubmit={handleSubmit}> \n                <label>Add A Word</label>\n                <br/>\n                <input type=\"text\" className=\"text-input\" onChange={handleInput}/>\n                <br/>\n                <input type=\"submit\" value=\"Submit\"/>\n            </form>\n        </div>\n    )\n}\nexport default AddWordForm","import { makeStyles } from '@material-ui/core/styles' \nimport Table from '@material-ui/core/Table' \nimport TableBody from '@material-ui/core/TableBody' \nimport TableCell from '@material-ui/core/TableCell' \nimport TableContainer from '@material-ui/core/TableContainer' \nimport TableHead from '@material-ui/core/TableHead' \nimport TableRow from '@material-ui/core/TableRow' \nimport Paper from '@material-ui/core/Paper' \n\n// Styling for table\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    }\n  }) \n\n\nconst WordTable = (props) =>{\n    \n    const classes = useStyles()\n\n    return(\n        <TableContainer className={classes.root} component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Word</TableCell>\n                        <TableCell align=\"left\">Definitions</TableCell>\n                        <TableCell align=\"left\">Link</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.words?.map((row) => (\n                    <TableRow style={{MuiTableCellRoot: '30px'}} key={row._id}>\n                        <TableCell>{row.word}</TableCell>\n                        <TableCell><ol>{row.definitions.map((def,i) => (\n                            <li key={i}>{def.definition}</li>\n                        ))}</ol></TableCell>\n                        <TableCell><a href={row.link}>{row.link}</a></TableCell>\n                    </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    ) \n}\nexport default WordTable ","import React, {useState} from 'react'\nimport axios from 'axios'\nimport '../css/Form.css'\n\nfunction DeleteWordForm(props){\n    const [word, setWord] = useState(' ')\n\n    const handleSubmit = (e) => {\n        const token = localStorage.getItem('jwt')\n        const encodedString = Buffer.from(`Bearer ${token}`).toString('base64')\n        const apiURL = process.env.REACT_APP_API_URL ? process.env.REACT_APP_API_URL + '/words/word' : 'http://localhost:5000/words/word'\n\n        axios.request({\n            method: 'DELETE',\n            url: apiURL+word,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': encodedString\n            }\n        }).then(res => {\n                props.getWords()\n                e.target.reset()\n            })\n            .catch(err => {\n                console.log(err)\n                alert(\"Error, word not found in local database\")\n                e.target.reset()\n            })\n        e.preventDefault()\n    }\n\n    /** Sets the word state */\n    const handleInput = (e) => {\n        setWord(e.target.value)\n    }\n\n    return(\n            <form className=\"form-style\" onSubmit={handleSubmit}> \n                <label>Delete A Word</label><br/>\n                <input type=\"text\" className=\"text-input\" onChange={handleInput}/><br/>\n                <input type=\"submit\" value=\"Submit\"/>\n            </form>\n    ) \n}\nexport default DeleteWordForm ","import React from 'react'\nimport '../css/Header.css'\nimport { Link } from \"react-router-dom\";\nimport HomeIcon from '@mui/icons-material/Home';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport { Button } from '@mui/material';\n\nfunction Header ({setIsLoggedIn, setDarkMode, darkMode}) {\n    const removeToken = (e) => {\n        localStorage.removeItem('jwt')\n        setIsLoggedIn(false)\n    } \n\n    const toggleDarkMode = (e) => {\n        const darkModeStorage = localStorage.getItem('darkmode') !== null ? !localStorage.getItem('darkmode') : 'false'\n        setDarkMode(darkModeStorage)\n        localStorage.removeItem('darkmode')\n        localStorage.setItem('darkmode', darkModeStorage)\n    }\n    \n    return (\n        <nav className=\"nav-style\">\n            <Link className=\"home-style\" to=\"/\"><HomeIcon sx={{ color: \"#E6E6E6\" }}/></Link>\n            <Button className=\"logout-style\" onClick={removeToken}><LogoutIcon sx={{ color: \"#E6E6E6\" }}/></Button>\n            {/* <Button className=\"darkmode-style\" onClick={toggleDarkMode}><DarkModeIcon sx={{ color: \"#E6E6E6\" }}/></Button> */}\n        </nav>\n    )\n}\nexport default Header","export default __webpack_public_path__ + \"static/media/book.582846e1.png\";","import '../css/Landingpage.css';\nimport Book from '../images/book.png'\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport GetStartedModal from '../components/GetStartedModal';\nimport { Dialog } from '@material-ui/core';\nimport { verifyToken } from '../services/authenticate'\n\nconst LandingPage = () => {    \n    async function checkToken() {\n        const token = localStorage.getItem('jwt')\n        \n        if(token){\n            const isValid = await verifyToken(token)\n        \n            if(isValid){\n                setIsLoggedIn(true)\n            }\n        }\n    }\n    \n    const [open, setOpen] = useState(false);\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    \n    let navigate = useNavigate();\n\n    const routeChange = () => {\n        let path = `home`;\n        navigate(path);\n    }\n\n    const handleOpen = () => {\n        checkToken()\n        setOpen(true)\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className='content-container'>\n            <div className='title-container'>\n                <div className='title-header'>Grow Your Vocabulary</div>\n                <div className='subtitle-header'>Create your own database of word <br />\n                    definitions and synonyms.\n                </div>\n                <div className='button-header'>\n                    <button className='title-button' type=\"button\" onClick={handleOpen}>Get Started</button>\n                </div>\n                <div>\n                    {(isLoggedIn && open) && \n                        routeChange()\n                    }\n                    {(!isLoggedIn) && \n                    <Dialog\n                        className='modal-container'\n                        open={open}\n                        onClose={handleClose}\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                    >\n                        <GetStartedModal setIsLoggedIn={setIsLoggedIn}/>\n                    </Dialog>\n                    }\n                </div>\n            </div>\n            <div className='image-container'>\n                <img className='book-css' src={Book} alt='a book' />\n            </div>\n        </div>\n    )\n}\nexport default LandingPage","import '../css/Footer.css'\nconst Footer = () => { \n    return <div className='footer'>\n        \n    </div>\n}\nexport default Footer","import './App.css' \nimport LandingPage from './pages/Landingpage'\nimport Footer from './components/Footer'\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <LandingPage/>\n      <Footer/>\n    </div>\n  ) \n}\n\nexport default App \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport HomePage from './pages/Homepage'\nimport {\n  HashRouter,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}/>\n      <Route path=\"/home\" element={<HomePage />}/>\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root')\n);\n","export function validateEmail(email){\n    if(email.length === 0) {\n        return false\n    }\n\n    let lastAtPos = email.lastIndexOf(\"@\")\n    let lastDotPos = email.lastIndexOf(\".\")\n\n    if (\n        !(\n          lastAtPos < lastDotPos &&\n          lastAtPos > 0 &&\n          email.indexOf(\"@@\") === -1 &&\n          lastDotPos > 2 &&\n          email.length - lastDotPos > 2\n        )\n      ) {\n        return false\n      } \n\n    return true\n}\n\nexport function validatePassword(password){\n    if(password.length < 6) {\n        return false\n    } else {\n        return true\n    }\n}","import { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport '../../css/GetStartedModal.css'\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react'\nimport axios from 'axios'\nimport { useNavigate } from 'react-router-dom';\nimport { validateEmail, validatePassword } from '../../services/validateInput'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '50ch',\n            marginTop: '35px',\n        },\n    },\n}));\n\nfunction SignInForm({setIsLoggedIn}) {\n    const classes = useStyles();\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [formError, setFormError] = useState({ isAuthenticated: false, message: '' })\n    let navigate = useNavigate()\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(!validateEmail(email)) {\n            setFormError({isAuthenticated: false, emailError: true, emailMessage: 'Invalid email'})\n        }\n        else if(!validatePassword(password)) {\n            setFormError({isAuthenticated: false, passwordError: true, passwordMessage: 'Invalid password'})    \n        } else {\n            const apiURL = process.env.REACT_APP_API_URL ? process.env.REACT_APP_API_URL + '/login/login' : 'http://localhost:5000/login/login'\n            axios.request({\n                method: 'post',\n                url: apiURL,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                auth: {\n                    username: email,\n                    password: password\n                }\n            }).then(res => {\n                const isError = !res.data.isAuthenticated\n                setFormError({passwordError: isError, emailError: isError, \n                              passwordMessage: 'Try Again', emailMessage: 'Try Again'})\n                if (!isError) {\n                    // Load token into local memory\n                    localStorage.setItem('jwt', res.data.accessToken)\n                    setIsLoggedIn(true)\n                    navigate('/home')\n                }\n            })   \n        }\n    }\n\n    return (\n        <div className=\"form-container\">\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                <TextField id=\"email\" label=\"Email\" fullWidth onChange={(e) => { setEmail(e.target.value) }} error={formError.emailError} helperText={formError.emailMessage} required />\n                <TextField id=\"password\" label=\"Password\" type=\"password\" fullWidth onChange={(e) => { setPassword(e.target.value) }} error={formError.passwordError} helperText={formError.passwordMessage} required />\n                <Button type='submit' variant=\"outlined\" color=\"primary\">\n                    Sign In\n                </Button>\n            </form>\n        </div>\n    )\n}\nexport default SignInForm","import { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport '../../css/GetStartedModal.css'\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react'\nimport axios from 'axios'\nimport { validateEmail, validatePassword } from '../../services/validateInput'\nimport { useNavigate } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '50ch',\n            marginTop: '35px',\n        },\n    },\n}));\n\nfunction RegisterForm({setIsLoggedIn}) {\n    const classes = useStyles();\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [formError, setFormError] = useState({ isError: false, message: '' })\n    let navigate = useNavigate()\n\n    const passwordsMatch = () => {\n        if (password !== confirmPassword) {\n            setFormError(formError => ({passwordError: true, passwordMessage: 'Password don\\'t match' }))\n            return false\n        } else {\n            return true\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(!validateEmail(email)) {\n            setFormError({ isAuthenticated: false, emailError: true, emailMessage: 'Invalid email'})\n        }\n        else if(!validatePassword(password)) {\n            setFormError({ isAuthenticated: false, passwordError: true, passwordMessage: 'Password must be 6 characters or greater'})\n        } else {\n            if (passwordsMatch(password, confirmPassword)) {\n                const apiURL = process.env.REACT_APP_API_URL ? process.env.REACT_APP_API_URL + '/login/register' : 'http://localhost:5000/login/register'\n                axios.request({\n                    method: 'post',\n                    url: apiURL,\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                    },\n                    auth: {\n                        username: email,\n                        password: password\n                    }\n                }).then(res => {\n                    let didCreate = !res.data.createdUser\n                    setFormError(formError => ({passwordError: didCreate, passwordMessage: res.data.message,\n                                                emailError: didCreate, emailMessage: res.data.message }))\n                    const apiURL = process.env.REACT_APP_API_URL ? process.env.REACT_APP_API_URL + '/login/login' : 'http://localhost:5000/login/login'\n                    axios.request({\n                        method: 'post',\n                        url: apiURL,\n                        headers: {\n                            'Accept': 'application/json',\n                            'Content-Type': 'application/json',\n                        },\n                        auth: {\n                            username: email,\n                            password: password\n                        }\n                    }).then(res => {\n                        const isError = !res.data.isAuthenticated\n                        setFormError({passwordError: isError, emailError: isError, \n                                        passwordMessage: 'Try Again', emailMessage: 'Try Again'})\n                        if (!isError) {\n                            // Load token into local memory\n                            localStorage.setItem('jwt', res.data.accessToken)\n                            setIsLoggedIn(true)\n                            navigate('/home')\n                        }\n                    }) \n                })\n            }\n        }\n    }\n\n    return (\n        <div className=\"form-container\">\n            <form className={classes.root} autoComplete=\"off\" onSubmit={handleSubmit} >\n                <TextField id=\"email\" label=\"Email\" fullWidth onChange={(e) => { setEmail(e.target.value) }} error={formError.emailError} helperText={formError.emailMessage} required />\n                <TextField id=\"password\" label=\"Password\" type=\"password\" fullWidth error={formError.passwordError} onChange={(e) => { setPassword(e.target.value) }} required  />\n                <TextField id=\"confirmPassword\" label=\"Confirm Password\" type=\"password\" fullWidth error={formError.passwordError} onChange={(e) => { setConfirmPassword(e.target.value) }} helperText={formError.passwordMessage} required />\n                <Button type='submit' variant=\"outlined\" color=\"primary\">\n                    Sign Up\n                </Button>\n            </form>\n        </div>\n    )\n}\nexport default RegisterForm","import Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { useState } from 'react'\nimport { AppBar } from '@material-ui/core';\nimport '../css/GetStartedModal.css'\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SignInForm from './Login/SignInForm';\nimport RegisterForm from './Login/RegisterForm';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <div>{children}</div>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nfunction GetStartedModal({setIsLoggedIn}) {\n    const [value, setValue] = useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n\n    return (\n        <div >\n            <AppBar position='static'>\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" centered>\n                    <Tab label=\"Register\" {...a11yProps(0)} />\n                    <Tab label=\"Sign In\" {...a11yProps(1)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <RegisterForm setIsLoggedIn={setIsLoggedIn}/>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <SignInForm setIsLoggedIn={setIsLoggedIn}/>\n            </TabPanel>\n        </div>\n    )\n}\nexport default GetStartedModal"],"sourceRoot":""}